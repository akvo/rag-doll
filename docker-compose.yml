# Define RabbitMQ environment variables once at the top level
x-environments: &rabbitmq_client_env
  RABBITMQ_USER: ${RABBITMQ_USER}
  RABBITMQ_PASS: ${RABBITMQ_PASS}
  RABBITMQ_HOST: ${RABBITMQ_HOST}
  RABBITMQ_PORT: ${RABBITMQ_PORT}
  RABBITMQ_EXCHANGE_USER_CHATS: ${RABBITMQ_EXCHANGE_USER_CHATS}
  RABBITMQ_QUEUE_USER_CHATS: ${RABBITMQ_QUEUE_USER_CHATS}
  RABBITMQ_QUEUE_USER_CHAT_REPLIES: ${RABBITMQ_QUEUE_USER_CHAT_REPLIES}

services:
  assistant:
    image: python:3.12.3
    working_dir: /app
    environment:
      <<: *rabbitmq_client_env
      ASSISTANT_LANGUAGES: ${ASSISTANT_LANGUAGES}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_CHAT_MODEL: ${OPENAI_CHAT_MODEL}
      CHROMADB_HOST: ${CHROMADB_HOST}
      CHROMADB_PORT: ${CHROMADB_PORT}
      CHROMADB_COLLECTION_TEMPLATE: ${CHROMADB_COLLECTION_TEMPLATE}
      CHROMADB_DISTANCE_CUTOFF: ${CHROMADB_DISTANCE_CUTOFF}
    depends_on:
      - rabbitmq
      - chromadb
    command: ["./run.sh"]
    volumes:
      - ./assistant:/app:delegated
      - ./packages/Akvo_rabbitmq_client:/lib/Akvo_rabbitmq_client:delegated
      - ./.cache/assistant:/root/.cache:delegated
      - ./setup.cfg:/app/setup.cfg:ro

  eppo-librarian:
    image: python:3.12.3
    working_dir: /app
    environment:
      EPPO_COUNTRY_ORGANISM_URL: ${EPPO_COUNTRY_ORGANISM_URL}
      EPPO_DATASHEET_URL: ${EPPO_DATASHEET_URL}
      EPPO_COUNTRIES: ${EPPO_COUNTRIES}
      ASSISTANT_LANGUAGES: ${ASSISTANT_LANGUAGES}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_CHAT_MODEL: ${OPENAI_CHAT_MODEL}
      PLAIN_TEXT_SYSTEM_PROMPT: ${PLAIN_TEXT_SYSTEM_PROMPT}
      PLAIN_TEXT_PROMPT: ${PLAIN_TEXT_PROMPT}
      CHROMADB_HOST: ${CHROMADB_HOST}
      CHROMADB_PORT: ${CHROMADB_PORT}
      CHROMADB_COLLECTION_TEMPLATE: ${CHROMADB_COLLECTION_TEMPLATE}
      CHUNK_SIZE: ${CHUNK_SIZE}
      OVERLAP_SIZE: ${OVERLAP_SIZE}
    depends_on:
      - chromadb
    command: ["./run.sh"]
    volumes:
      - ./eppo-librarian:/app:delegated
    restart: no

  chromadb:
    image: chromadb/chroma:0.5.5
    ports:
      - ${CHROMADB_PORT}:${CHROMADB_PORT}
    environment:
      IS_PERSISTENT: True
      ANONYMIZED_TELEMETRY: False
    volumes:
      - chromadb-data:/chroma/chroma

  rabbitmq:
    image: rabbitmq:management
    ports:
      - ${RABBITMQ_PORT}:${RABBITMQ_PORT}
      - ${RABBITMQ_MANAGEMENT_PORT}:${RABBITMQ_MANAGEMENT_PORT}
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq/mnesia/

  postgres:
    image: postgres:12-alpine
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASS}
    volumes:
      - ./postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - ./postgres/script:/script:ro
      - pg-data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:8.6
    ports:
      - ${PGADMIN_PORT}:${PGADMIN_PORT}
    environment:
      PGADMIN_LISTEN_PORT: ${PGADMIN_PORT}
      PGADMIN_DEFAULT_EMAIL: dev@akvo.org
      PGADMIN_DEFAULT_PASSWORD: ${POSTGRES_PASS}
    volumes:
      - ./postgres/pgadmin4/servers.json:/pgadmin4/servers.json
      - pg-admin-data:/var/lib/pgadmin
    depends_on:
      - postgres

  backend:
    image: python:3.12.3
    working_dir: /app
    environment:
      <<: *rabbitmq_client_env
      DATABASE_URL: postgresql://akvo:${POSTGRES_PASS}@postgres:${POSTGRES_PORT}/dev
      BACKEND_PORT: ${BACKEND_PORT}
      JWT_SECRET: ${JWT_SECRET}
      WEBDOMAIN: "${WEBDOMAIN}:${FRONTEND_PORT}"
      MAGIC_LINK_CHAT_TEMPLATE: ${MAGIC_LINK_CHAT_TEMPLATE}
      INITIAL_CHAT_TEMPLATE: ${INITIAL_CHAT_TEMPLATE}
      TWILIO_ACCOUNT_SID: ${TWILIO_ACCOUNT_SID}
      TWILIO_AUTH_TOKEN: ${TWILIO_AUTH_TOKEN}
      TWILIO_WHATSAPP_NUMBER: ${TWILIO_WHATSAPP_NUMBER}
      SLACK_BOT_TOKEN: ${SLACK_BOT_TOKEN}
      SLACK_SIGNING_SECRET: ${SLACK_SIGNING_SECRET}
      BUCKET_NAME: ${BUCKET_NAME}
      LAST_MESSAGES_LIMIT: ${LAST_MESSAGES_LIMIT}
      ASSISTANT_LAST_MESSAGES_LIMIT: ${ASSISTANT_LAST_MESSAGES_LIMIT}
      GOOGLE_APPLICATION_CREDENTIALS: /credentials/${GOOGLE_APPLICATION_CREDENTIALS}
    command: ["./dev.sh"]
    volumes:
      - ./backend:/app:delegated
      - ./setup.cfg:/app/setup.cfg:ro
      - ./packages/Akvo_rabbitmq_client:/lib/Akvo_rabbitmq_client:delegated
      - ${GOOGLE_APPLICATION_CREDENTIALS_PATH}:/credentials/:ro
    depends_on:
      - postgres
      - rabbitmq

  frontend:
    image: akvo/akvo-node-18-alpine:20230831.105309.b9593b7
    working_dir: /app
    environment:
      FRONTEND_PORT: ${FRONTEND_PORT}
      BACKEND_PORT: ${BACKEND_PORT}
    ports:
      - ${FRONTEND_PORT}:${FRONTEND_PORT}
    command: ["./dev.sh"]
    volumes:
      - ./frontend:/app:delegated
    depends_on:
      - backend

  packages:
    image: python:3.12.3
    working_dir: /app
    environment:
      <<: *rabbitmq_client_env
    command: ["./tests.sh"]
    volumes:
      - ./packages:/app:delegated
    depends_on:
      - rabbitmq

volumes:
  pg-data:
  pg-admin-data:
  rabbitmq-data:
  chromadb-data:
